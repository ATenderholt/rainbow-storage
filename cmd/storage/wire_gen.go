// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/ATenderholt/dockerlib"
	"github.com/ATenderholt/rainbow-storage/internal/http"
	"github.com/ATenderholt/rainbow-storage/internal/service"
	"github.com/ATenderholt/rainbow-storage/internal/settings"
	"github.com/google/wire"
)

// Injectors from inject.go:

func InjectApp(cfg *settings.Config) (App, error) {
	dockerController, err := dockerlib.NewDockerController()
	if err != nil {
		return App{}, err
	}
	config := mapConfig(cfg)
	lambdaInvoker := NewLambdaInvoker()
	notificationService := service.NewNotificationService(config, lambdaInvoker)
	minioHandler := http.NewMinioHandler(cfg, notificationService)
	mux := http.NewChiMux(minioHandler)
	app := NewApp(cfg, dockerController, mux)
	return app, nil
}

// inject.go:

var api = wire.NewSet(http.NewChiMux, http.NewMinioHandler)

func mapConfig(cfg *settings.Config) service.Config {
	return cfg
}

var services = wire.NewSet(service.NewNotificationService, wire.Bind(new(http.NotificationService), new(*service.NotificationService)), mapConfig)
